Epitech Lyon                                                 M. VALLENET
                                                           A. ABOUELLEIL
                                                                N. SABRE
                                                              M. PREMONT
                                                                 Epitech
                                                            October 2022

                            R-Type Protocols

Status of this Memo

   This memo is the official specification of the R-Type UDP Protocol
   The R-Type is a third year project from EPITECH. Distribution of
   this memo is unlimited.


Table of Contents

   1.   Introduction . . . . . . . . . . . . . . . . . . . . . . . . . 1
   2.   R-Type architecture  . . . . . . . . . . . . . . . . . . . . . 1
   3.   R-type TCP Protocol  . . .. . . . . . . . . . . . . . . .  . . 1
   4.   R-Type UDP Protocol  . . . . . . . . . . . . . . . . . . . . . 2
   4a.   Payload . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
   4c.   DataNet transmission  . . . . . . . . . . . . . . . . . . . . 2

1.  Introduction

   The goal of the R-Type project is to create an online multiplayer
   copy of the classic R-Type game (1987).

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119.

2.  R-Type architecture

   The R-Type architecture is a client-server game architecture.
   The logic of the game is in both the server and the client, however
   the server has authority over the clients. A client connects to the server
   by using the R-Type UDP protocol. Once connected to the server,
   the client is able to play the game

3.  R-Type TCP Protocol

   Our TCP protocol allows the player to be redirected to an available 
   UDP server so that he can join a game. If no UDP server is available,
   a new one is started so that the player can play.

   To connect the client MUST send "GET SERVER" to the TCP server.

   For the client to connect the server responds with the connection
   information to the UDP server MUST be in the format:

      "<address>;<port>\n"

   Then the client uses his information to reach the desired server

Vallenet                    Standards Track                     [Page 1]

RFC 69007                   R-Type Protocols                October 2022

4.  R-Type UDP Protocol

   All the client-server communications before the game's launch are
   done by using this R-Type UDP Protocol.


   4a.  Payload

      Every transmission done with the R-Type UDP Protocol MUST transmit
      a payload containing this 2 datas:

         char CODE;
         DataNet;

      Where CODE is a number that can be broken down into two parts.
      The first bit indicates if there is an error (0 for an error, 1 for a
      success). The next 7 bits are used to identify the message.
      DataNet is a serialized object that can contain an object of any type

      The CODE enumeration:

         enum RFC_CODE {
             KO = 0,
             OK = 10,
             FIRST_CONNECTION = 11,
             DATANET_TRANSMISSION = 12,
         };

      To send a payload, each data MUST be written on the UDP buffer in
      this order: CODE, DATANET.

      If the CODE is empty or invalid, the DataNet SHOULD NOT be read.

      To receive a payload, you MUST read the first bit
      (corresponding to the error), then read the 7 following
      and then read the DataNet bytes.


   4b.  DataNet Transmission

      The communication protocol is based on the transmission
      of objects called DataNet (as described in details below)

      The DataNet struct:

          struct DataNet {
            std::type_index index;
            std::any any;
          }

     The serialization of std::any is done through a map allowing to cast the
     variable before serialization and deserialization






Vallenet                    Standards Track                    [Page 2]

RFC 69007                   R-Type Protocols               October 2022